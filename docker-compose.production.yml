# UBAS Financial Trust - Production Docker Compose
# Ready for live deployment and client demonstrations

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ubas_postgres
    environment:
      POSTGRES_DB: ubas_financial_trust
      POSTGRES_USER: ubas_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - ubas_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ubas_admin -d ubas_financial_trust"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Management and Caching
  redis:
    image: redis:7-alpine
    container_name: ubas_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - ubas_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.production
    container_name: ubas_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://ubas_admin:${DB_PASSWORD}@postgres:5432/ubas_financial_trust
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      FROM_EMAIL: noreply@ubasfintrust.com
      FROM_NAME: UBAS Financial Trust
      CORS_ORIGIN: ${FRONTEND_URL}
      RATE_LIMIT_WINDOW: 900000
      RATE_LIMIT_MAX: 100
      SESSION_SECRET: ${SESSION_SECRET}
      ADMIN_EMAIL: admin@ubasfintrust.com
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ubas_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.production
      args:
        VITE_API_URL: ${BACKEND_URL}
        VITE_APP_NAME: UBAS Financial Trust
        VITE_MINIMUM_DEPOSIT: 100
        VITE_MINIMUM_WITHDRAWAL: 20
        VITE_MAXIMUM_DAILY_TRANSFER: 50000
    container_name: ubas_frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ubas_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (Optional for scaling)
  nginx:
    image: nginx:alpine
    container_name: ubas_nginx
    volumes:
      - ./nginx/production.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - ubas_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ubas_network:
    driver: bridge
