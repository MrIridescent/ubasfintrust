name: Deploy Staging

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

concurrency:
  group: deploy-staging
  cancel-in-progress: true

env:
  API_VERSION: v1

jobs:
  preflight:
    name: Preflight (Staging)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: |
          npm install
          cd server && npm install
      - name: Type check
        run: |
          npx tsc --noEmit
          cd server && npx tsc --noEmit
      - name: Build frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL_STAGING }}
          VITE_APP_NAME: UBAS Financial Trust (Staging)
        run: npm run build
      - name: Build backend
        run: cd server && npm run build
      - name: Archive frontend build
        uses: actions/upload-artifact@v4
        with:
          name: staging-frontend-dist
          path: dist

  deploy-backend-render:
    name: Deploy Backend (Render Staging)
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - name: Trigger Render staging deploy hook (skip if unset)
        env:
          HOOK_URL: ${{ secrets.RENDER_STAGING_DEPLOY_HOOK_URL }}
        run: |
          if [ -z "$HOOK_URL" ]; then echo "No staging hook set, skipping backend deploy"; exit 0; fi
          curl -fsSL -X POST "$HOOK_URL" || exit 1
      - name: Wait for rollout
        run: sleep 25
      - name: Capture backend health JSON
        env:
          STAGING_API_HEALTH_URL: ${{ secrets.STAGING_API_HEALTH_URL }}
        run: |
          if [ -z "$STAGING_API_HEALTH_URL" ]; then echo "No health URL set"; exit 0; fi
          curl -fsSL "$STAGING_API_HEALTH_URL" | tee health.json
          echo "health_json<<EOF" >> $GITHUB_OUTPUT
          head -c 1000 health.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        id: health

  deploy-frontend-netlify:
    name: Deploy Frontend (Netlify Staging)
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm install
      - name: Build (ensure dist exists)
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL_STAGING }}
          VITE_APP_NAME: UBAS Financial Trust (Staging)
        run: npm run build
      - name: Deploy via Netlify CLI (draft alias)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN_STAGING || secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID_STAGING }}
        run: |
          if [ -z "$NETLIFY_SITE_ID" ] || [ -z "$NETLIFY_AUTH_TOKEN" ]; then echo "Missing staging Netlify secrets, skipping"; exit 0; fi
          npm install -g netlify-cli
          ALIAS=staging-${GITHUB_SHA::7}
          netlify deploy --dir=dist --auth "$NETLIFY_AUTH_TOKEN" --site "$NETLIFY_SITE_ID" --alias "$ALIAS"
          echo "Staging alias: $ALIAS"
          echo "alias_url=https://${ALIAS}--${NETLIFY_SITE_ID}.netlify.app" >> $GITHUB_OUTPUT
        id: netlify_deploy

  pr-preview-comment:
    name: PR Preview Comment
    if: github.event.pull_request.number
    runs-on: ubuntu-latest
    needs: [deploy-backend-render, deploy-frontend-netlify]
    steps:
      - name: Post PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const aliasUrl = process.env.ALIAS_URL;
            const healthJson = process.env.HEALTH_JSON || 'No health data';
            const pr = context.payload.pull_request;
            if (!pr) { core.info('No PR context'); return; }
            const body = `ðŸš€ Staging preview: ${aliasUrl}\n\nðŸ©º Health (truncated):\n\n<details><summary>JSON</summary>\n\n\n${healthJson}\n\n</details>`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body
            });
        env:
          ALIAS_URL: ${{ needs.deploy-frontend-netlify.outputs.netlify_deploy_alias_url || steps.netlify_deploy.outputs.alias_url || '' }}
          HEALTH_JSON: ${{ needs.deploy-backend-render.outputs.health_health_json || '' }}

  smoke:
    name: Smoke (Staging)
    runs-on: ubuntu-latest
    needs: [deploy-backend-render, deploy-frontend-netlify]
    steps:
      - name: Backend health (optional)
        env:
          STAGING_API_HEALTH_URL: ${{ secrets.STAGING_API_HEALTH_URL }}
        run: |
          if [ -z "$STAGING_API_HEALTH_URL" ]; then echo "No staging health URL provided, skipping"; exit 0; fi
          curl -fsSL "$STAGING_API_HEALTH_URL" || exit 1
      - name: Summary
        run: echo "Staging deploy workflow complete." 
