version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: provi-postgres
    environment:
      POSTGRES_DB: provi_banking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - provi-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: provi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - provi-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: provi-api
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: provi_banking
      DB_USER: postgres
      DB_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your_super_secret_jwt_key_here_make_it_very_long_and_random_development
      JWT_REFRESH_SECRET: your_super_secret_refresh_key_here_make_it_very_long_and_random_development
      ENCRYPTION_KEY: your_32_character_encryption_key_dev
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - provi-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: provi-frontend
    environment:
      VITE_API_URL: http://localhost:5000/api/v1
      VITE_SOCKET_URL: http://localhost:5000
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - provi-network
    depends_on:
      - api
    restart: unless-stopped
    command: npm run dev

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: provi-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - provi-network
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  provi-network:
    driver: bridge
